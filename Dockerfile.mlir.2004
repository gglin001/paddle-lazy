# docker build -t paddle-lazy-mlir:latest -f Dockerfile.mlir.2004 .

# FROM continuumio/miniconda3
# prefer to use miniforge3
# FROM condaforge/miniforge3
# FROM graphcore/poplar:2.6.0
FROM graphcore/poplar:2.6.0-ubuntu-20.04

# install basic tools
RUN apt update && apt install vim wget unzip -y
RUN DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC apt-get -y install tzdata

# install build tools
# RUN apt install gcc-8 g++-8 -y

# install miniforge
ENV PATH="/opt/conda/bin:${PATH}"
ARG PATH="/opt/conda/bin:${PATH}"
RUN wget \
    https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh \
    && mkdir /root/.conda \
    && bash /Mambaforge-Linux-x86_64.sh -b -p /opt/conda \
    && rm -f /Mambaforge-Linux-x86_64.sh
RUN conda init bash

# use conda-forge
RUN conda config --add channels conda-forge
RUN conda config --set channel_priority strict

# create new env
RUN conda create -n py37 python=3.7 -y

# make RUN commands use the new environment:
SHELL ["conda", "run", "-n", "py37", "/bin/bash", "-c"]

# install tools
# will install sysroot_linux-64
# use g++ from apt, glibc version of conda is too high
# RUN mamba install clangdev gxx libcxx
RUN mamba install cmake ninja clang-tools clang-format -y

# install libs
# RUN mamba install glog boost protobuf -y
RUN mamba install pybind11 -y

# install other tools
RUN mamba install bash-completion openssh git -y

# install requirements for llvm
RUN apt install -y lsb-release wget software-properties-common gnupg
RUN apt install -y sudo

# CI
RUN pip install pre-commit isort black yapf cmake-format cmakelint

# set env
RUN echo "export LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:/opt/conda/envs/py37/lib" >> ~/.bashrc
RUN echo "export LIBRARY_PATH=\$LIBRARY_PATH:/opt/conda/envs/py37/lib" >> ~/.bashrc
RUN echo "export PROMPT_DIRTRIM=1" >> ~/.bashrc
RUN echo "conda activate py37" >> ~/.bashrc
